{"version":3,"sources":["message-item.js","message-list.js","input.js","login.js","modal-sign-out.js","service/clientchat.js","api/api.js","App.js","registerServiceWorker.js","index.js"],"names":["messageItem","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","this","call","isMine","user","JSON","parse","localStorage","getItem","window","location","reload","type","name","setState","checkIsMine","profileObj","state","_createClass","key","value","React","createElement","className","concat","src","url","message","Component","MessageItem","apply","arguments","messages","map","item","index","Message","App","setValue","e","sendTyping","target","setNull","addEmoji","emoji","native","setTimeout","changeMessage","isPopups","val","isPopup","input","keyCode","sendMessage","_this2","isShowPopup","id","placeholder","onChange","onKeyUp","checkEnter","bind","onClick","aria-hidden","ref","checkOutSide","Picker","onSelect","Login","_len","length","args","Array","_key","responseFacebook","response","console","log","setUser","setItem","stringify","responseGoogle","FacebookLogin","textButton","appId","process","autoLoad","fields","callback","GoogleLogin","buttonText","clientId","onSuccess","isSignedIn","ModalSignOut","signOut","_this$props","isModal","removeItem","_this$props2","visible","Fragment","Modal","title","onOk","onCancel","okText","cancelText","WRITE","READ","clientchat","_API","ClientChat","getDataChat","get","writeDataChat","data","post","API","params","_config","config","Object","assign","method","_request","axios","then","catch","err","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_isNativeReflectConstruct","Super","_getPrototypeOf","NewTarget","_possibleConstructorReturn","$","timeOut","msgChange","loadData","_asyncToGenerator","_callee","objMessage","_context","document","addEventListener","clearInterval","badge","animate","scrollTop","prop","sendnewMessage","_this$state","typeLogin","picture","imageUrl","_callee2","_context2","socket","emit","getElementById","focus","stopPropagation","closest","setBadge","badgeChange","openNotification","clickNotify","notification","open","description","duration","onClose","users","getTyping","_this$state2","isTyping","clearTimeout","checkLogin","io","on","res","newMessage","m","_this3","_this$state3","ids","_map","parseInt","Math","max","_toConsumableArray","temp","setInterval","scrollHeight","clientHeight","_this4","_this$state4","Helmet","status","Messages","typing","Input","isTypingNull","isLocalhost","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","URL","origin","fetch","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.dd6c033d.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class messageItem extends React.Component {\n    constructor(props) {\n        super(props);\n        //Khởi tạo state,\n        this.state = {\n            checkIsMine: ''\n        }\n    }\n\n    isMine = () =>{\n        const user = JSON.parse(localStorage.getItem(\"user\"));\n        if(user == null){\n            window.location.reload(true);\n        }\n        if(this.props.type == 0){\n            if(user && this.props.user == user.name){\n                this.setState({\n                    checkIsMine: 'is-mine'\n                })\n            }\n        }else if(this.props.type == 1){\n            if( user && user.profileObj && (this.props.user == user.profileObj.name)){\n                this.setState({\n                    checkIsMine: 'is-mine'\n                })\n            }\n        }\n    }\n\n    componentWillMount(){\n        this.isMine()\n    }\n\n    render () {\n        return (\n            <li>\n                <div className={`${this.state.checkIsMine} nameTag`}>{this.props.user}</div>\n                <div className={\"message left appeared\"}>\n                    <div className={`avatar ${this.state.checkIsMine}`}><img src={this.props.url} /></div>\n                    <div className={`text_wrapper ${this.state.checkIsMine}`}>\n                        <div className=\"text\">{this.props.message}</div>\n                    </div>\n                </div>\n            </li>\n        )\n    }\n}","import React from 'react';\nimport Message from './message-item';\n\n\nexport default class MessageItem extends React.Component {\n    render () {\n        return (\n            <ul className=\"messages\">\n                {this.props.messages.map((item, index) =>\n                    <Message type={this.props.type} key={index} url={item.url} user={item.user} message={item.message}/>\n                )}\n            </ul>\n        )\n    }\n}","import React from 'react';\nimport 'emoji-mart/css/emoji-mart.css'\nimport { Picker } from 'emoji-mart'\n\nexport default class App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        //Khởi tạo state,\n        this.state = {\n            value: this.props.input,\n        }\n    }\n    checkEnter(e) {\n        this.props.changeMessage(this.state.value)\n        this.props.sendTyping(this.props.user)\n        if (e.keyCode === 13) {\n            this.props.sendMessage();\n            this.setNull()\n        }\n    }\n    setValue = (e) =>{\n        this.props.sendTyping(this.props.user)\n        this.setState({\n            value: e.target.value\n        })\n    }\n\n    setNull = () =>{\n        this.setState({\n            value: ''\n        })\n    }\n\n    addEmoji = (emoji) => {\n        this.props.sendTyping(this.props.user)\n        this.setState({\n            value: this.state.value + emoji.native,\n        })\n        setTimeout(\n            this.props.changeMessage(this.state.value + emoji.native)   \n        , 3000)\n    }\n\n    isPopups = (val) =>{\n        this.props.isPopup(val)\n    }\n\n    render () {\n        const { isShowPopup } = this.props \n        return (\n           <div>\n                <div className=\"bottom_wrapper\">\n                    <div  className=\"message_input_wrapper\">\n                        <div className=\"input-group mb-3\">\n                            <input id=\"myInput\" value={this.state.value} type=\"text\" className=\"message_input\" placeholder=\"Nhập Tin Nhắn ...\" onChange={this.setValue} onKeyUp={this.checkEnter.bind(this)} />\n                            <div className=\"input-group-prepend\">\n                                <i onClick={() => this.props.isPopup(true)} className=\"icon far fa-smile\" aria-hidden=\"true\"></i>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"send_message\" onClick={() => (this.props.sendMessage(), this.setNull())} ref=\"inputMessage\" >\n                        <div className='icon'></div>\n                        <div className='text'>Gửi</div>\n                    </div>\n                </div>\n                <div className={isShowPopup ? 'ABC' : 'd-none'} onClick={this.checkOutSide}>\n                    <Picker onSelect={this.addEmoji} />\n                </div>\n           </div>\n        )\n    }\n}","import React from 'react';\nimport FacebookLogin from 'react-facebook-login';\nimport { GoogleLogin } from 'react-google-login';\n\nexport default class Login extends React.Component {\n\n    responseFacebook = (response) => {\n        console.log('fb', response)\n        this.props.setUser(response, 0)\n        localStorage.setItem('user', JSON.stringify(response))\n        localStorage.setItem('loginType', 0)\n    }\n\n    responseGoogle = (response) =>{\n        console.log('google', response)\n        this.props.setUser(response, 1)\n        localStorage.setItem('user', JSON.stringify(response))\n        localStorage.setItem('loginType', 1)\n    }\n\n    render () {\n        return (\n           <div className='containFB'>\n                <FacebookLogin\n                    // cssClass=\"facebook\"\n                    textButton=\"FaceBook\"\n                    // appId=\"3469006863157349\"\n                    appId={process.env.REACT_APP_FACEBOOK_KEY}\n                    autoLoad={false}\n                    fields=\"name,email,picture\"\n                    callback={this.responseFacebook}\n                />\n                <GoogleLogin\n                    className=\"google\"\n                    buttonText=\"Google\"\n                    clientId={process.env.REACT_APP_GOOGLE_KEY}\n                    onSuccess={this.responseGoogle}\n                    isSignedIn={false}\n                />\n           </div>\n        )\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Modal } from 'antd';\n\nexport default class ModalSignOut extends React.Component {\n  \n    signOut = () =>{\n        const {setUser, isModal} = this.props;\n        localStorage.removeItem('user')\n        localStorage.removeItem('loginType')\n        isModal(false)\n        setUser(null, null)\n        // window.location = \"https://clientchat.herokuapp.com/\"\n    }\n\n    render() {\n        const {visible, isModal} = this.props\n        return (\n        <>\n            <Modal\n                title=\"Thông Báo !!!\"\n                visible={visible}\n                onOk={this.signOut}\n                onCancel={() => isModal(false)}\n                okText=\"Xác Nhận\"\n                cancelText=\"Thoát\"\n            >\n            <p> Bạn Có Muốn Thoát ?</p>\n            </Modal>\n        </>\n        );\n    }\n}","import API from '../api/api';\n\nconst WRITE = '/write';\nconst READ = '/read';\n\nclass ClientChat extends API{\n\n    getDataChat = () => {\n        return this.get(process.env.REACT_APP_SERVER + READ);\n    }\n\n    writeDataChat = (data) => {\n        return this.post(process.env.REACT_APP_SERVER + WRITE, data);\n    }\n}\n\nexport default new ClientChat();","import axios from 'axios';\n\nclass API {\n\n    _request(_config) {\n        let config = Object.assign(\n            _config = _config || {}\n        );\n        return axios(config)\n            .then(response => {\n                return response.data;\n            })\n            .catch(err => {\n                let { response } = err;\n                if (!response) {\n                    throw err;\n                }\n            });\n    }\n\n    get = (url, params, _config) => {\n        let config = Object.assign({\n            url,\n            method: 'get',\n            params\n        }, _config || {});\n        return this._request(config);\n    }\n\n    post(url, data, _config) {\n        let config = Object.assign({\n            url,\n            method: 'post',\n            data\n        }, _config || {});\n        return this._request(config);\n    }\n\n    put(url, data, _config) {\n        let config = Object.assign({\n            url,\n            method: 'put',\n            data\n        }, _config || {});\n        return this._request(config);\n    }\n\n    patch(url, data, _config) {\n        let config = Object.assign({\n            url,\n            method: 'patch',\n            data\n        }, _config || {});\n        return this._request(config);\n    }\n\n    delete(url, params, _config) {\n        let config = Object.assign({\n            url,\n            method: 'delete',\n            params\n        }, _config || {});\n        return this._request(config);\n    }\n}\n\nexport default API","import React from 'react';\nimport $ from 'jquery';\nimport { Helmet } from \"react-helmet\";\nimport Messages from './message-list';\nimport Input from './input';\nimport _map from 'lodash/map';\nimport io from 'socket.io-client';\nimport Login from './login';\nimport ModalSignOut from './modal-sign-out';\nimport { Button, notification } from 'antd';\nimport ClientChat from './service/clientchat'\n\nimport './App.css';\nvar status = $('#status');\nvar timeOut\nvar msgChange = null\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        //Khởi tạo state,\n        this.state = {\n            messages: [],\n            user: {},\n            input: '',\n            badge: 0,\n            isShowPopup: false,\n            checkLogin: false,\n            visible: false,\n            typeLogin: localStorage.getItem('loginType') || null,\n            clickNotify: true,\n            isTyping: '',\n        }\n        this.socket = null;\n    }\n    //Connect với server nodejs, thông qua socket.io\n    UNSAFE_componentWillMount() {\n        this.setState({\n            user: JSON.parse(localStorage.getItem('user')) || []\n        })\n        this.socket = io(process.env.REACT_APP_SERVER);\n        this.socket.on('id', res => this.setState({ user: res })) // lắng nghe event có tên 'id'\n        this.socket.on('newMessage', (response) => { this.newMessage(response) });\n        this.socket.on('typing', (response) => { this.getTyping(response) });\n    }\n\n    loadData = async () => {\n        let objMessage = $('.messages');\n        let data = await ClientChat.getDataChat()\n        this.setState({\n            messages: data && JSON.parse(data) || []\n        })\n        document.addEventListener(\"visibilitychange\", ()=>{\n            clearInterval(msgChange)\n            document.title = (this.state && this.state.badge != 0 ? '(' + this.state.badge + ')' : '') + ' Client Chat '\n        });\n        objMessage.animate({ scrollTop: objMessage.prop('scrollHeight') }, 1000);\n    }\n\n    componentDidMount() {\n        this.loadData()\n    }\n\n    newMessage(m) {\n        let objMessage = $('.messages');\n        const { typeLogin, user } = this.state\n        const messages = this.state.messages;\n        let ids = _map(messages, 'id');\n        let max = parseInt(Math.max(...ids)) || 0;\n        messages.push({\n            id: messages.length + 1,\n            user: m.user,\n            message: m.message,\n            url: m.url\n        });\n        if (typeLogin == 1 && m.user != user.profileObj.name || typeLogin == 0 && m.user != user.name) {\n            let temp = 1;\n            this.setState({\n                badge: this.state.badge + 1,\n                isTyping: \"\"\n            })\n            clearInterval(msgChange)\n            msgChange = setInterval(()=>{\n                if(temp == 1){\n                    document.title = '(' + this.state.badge  + ') Client Chat '\n                    --temp \n                }else{\n                    document.title = m.user + ' Nhắn Tin'\n                    ++temp\n                }\n            }, 1000)\n        }\n        if (objMessage && objMessage[0] && (objMessage[0].scrollHeight - objMessage[0].scrollTop) === objMessage[0].clientHeight) {\n            this.setState({ messages });\n            objMessage.animate({ scrollTop: objMessage.prop('scrollHeight') }, 300); //tạo hiệu ứng cuộn khi có tin nhắn mới\n\n        } else {\n            this.setState({ messages });\n            objMessage.animate({ scrollTop: objMessage.prop('scrollHeight') }, 300);\n        }\n    }\n    //Gửi event socket newMessage với dữ liệu là nội dung tin nhắn\n    sendnewMessage = () => {\n        const { typeLogin, messages } = this.state\n        let data = {}\n        if (typeLogin == 0) {\n            data = {\n                id: messages.length + 1,\n                user: this.state.user.name || null,\n                message: this.state.input || '',\n                url: this.state.user.picture.data.url || ''\n            }\n        } else if (typeLogin == 1) {\n            data = {\n                id: messages.length + 1,\n                user: (this.state.user.profileObj.name || null),\n                message: this.state.input || '',\n                url: this.state.user.profileObj.imageUrl || ''\n            }\n        }\n        if (this.state.input) {\n            (async () => await ClientChat.writeDataChat(data))()\n            this.socket.emit(\"newMessage\", data); //gửi event về server\n            this.setState({\n                input: ''\n            })\n        }\n    }\n\n    changeMessage = (value) => {\n        document.getElementById(\"myInput\").focus()\n        this.setState({\n            input: value\n        })\n    }\n\n    isPopup = (val) => {\n        this.setState({\n            isShowPopup: val\n        })\n    }\n\n    checkOutSide = (e) => {\n        e.stopPropagation();\n        if (!e.target.closest('.emoji-mart') && this.state.isShowPopup == true) {\n            this.setState({\n                isShowPopup: false\n            })\n        }\n    }\n\n    setUser = (val, type) => {\n        this.setState({\n            user: val,\n            typeLogin: type\n        })\n    }\n\n    isModal = (val) => {\n        this.setState({\n            visible: val\n        });\n    };\n\n    setBadge = () => {\n        this.setState({\n            badge: 0\n        })\n        document.title = 'Client Chat'\n        clearInterval(msgChange);\n    }\n\n    badgeChange = () => {\n        this.setBadge()\n    }\n\n    openNotification = () => {\n        const { clickNotify } = this.state\n        if (clickNotify) {\n            this.setState({\n                clickNotify: false\n            })\n            this.badgeChange()\n            notification.open({\n                message: \"Tin Nhắn Mới\",\n                description: (\n                    <div className=\"notification-wait\">\n                        {\"Bạn Có \" + this.state.badge + \" tin nhắn chờ\"}\n                    </div>),\n                className: \"notification\",\n                duration: 2,\n                onClose: () => {\n                    this.setState({\n                        clickNotify: true\n                    })\n                }\n            });\n        }\n\n    };\n\n    sendTyping = (users) => {\n        const { typeLogin } = this.state\n        let data = {}\n        if (typeLogin == 0) {\n            data = {\n                user: users.name || null,\n            }\n        } else if (typeLogin == 1) {\n            data = {\n                user: (users.profileObj.name || null),\n            }\n        }\n        this.socket.emit(\"typing\", data); //gửi event về server\n    }\n\n    getTyping = (data) => {\n        const { typeLogin, user } = this.state\n        if (typeLogin == 1 && data.user != user.profileObj.name || typeLogin == 0 && data.user != user.name) {\n            this.setState({\n                isTyping: data.user\n            })\n            clearTimeout(timeOut)\n            timeOut = setTimeout(() => {\n                this.setState({\n                    isTyping: \"\"\n                })\n            }, 3000)\n        }\n    }\n\n    render() {\n        const { checkLogin, user, visible, typeLogin, badge, isTyping, input } = this.state\n        return (\n            <div className='containButton'>\n                <Helmet>\n                    <title>{`Client Chat` + (badge == 0 ? '' : '')} </title>\n                </Helmet>\n                {\n                    user && Object.keys(user).length <= 1 || user == null || user && user.status == \"unknown\" ?\n                        <Login\n                            checkLogin={checkLogin}\n                            setUser={this.setUser}\n                        />\n                        :\n                        <div className=\"app__content\" onClick={this.checkOutSide}>\n                            <div className=\"badge-block\" onClick={this.openNotification}>\n                                <div className=\"far fa-bell icon-badge\"></div>\n                                <span className={badge == 0 ? 'd-none' : \"e-badge e-badge-info e-badge-overlap e-badge-notification\"}>{badge}</span>\n                            </div>\n                            <div className=\"chat_window\" onClick={this.setBadge} id=\"chat_window\">\n                                <i onClick={() => this.isModal(true)} className=\"sign-out fas fa-sign-out-alt\" aria-hidden=\"true\"></i>\n                                <Messages type={typeLogin} messages={this.state.messages} typing={this.state.typing} />\n                                <div className={isTyping ? \"wave typing\" : `d-none`}>\n                                    <p>{isTyping} đang cào phím</p>\n                                    <span>&nbsp;</span>\n                                    <span>.</span>\n                                    <span>.</span>\n                                    <span>.</span>\n                                </div>\n                                <Input\n                                    input={input}\n                                    sendMessage={this.sendnewMessage}\n                                    sendTyping={this.sendTyping}\n                                    changeMessage={this.changeMessage}\n                                    isShowPopup={this.state.isShowPopup}\n                                    isPopup={this.isPopup}\n                                    checkOutSide={this.checkOutSide}\n                                    user={user}\n                                    isTypingNull={this.isTypingNull}\n                                />\n                            </div>\n                            <ModalSignOut\n                                isModal={this.isModal}\n                                visible={visible}\n                                setUser={this.setUser}\n                            />\n                        </div>\n                }\n            </div>\n        )\n    }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}