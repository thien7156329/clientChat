{"version":3,"sources":["App.js","message-item.js","message-list.js","input.js","login.js","modal-sign-out.js","service/clientchat.js","api/api.js","registerServiceWorker.js","index.js"],"names":["timeOut","messageItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isMine","user","JSON","parse","localStorage","getItem","window","location","reload","type","name","setState","checkIsMine","profileObj","state","react_default","a","createElement","className","concat","src","url","message","React","Component","MessageItem","messages","map","item","index","message_item_messageItem","key","App","setValue","e","sendTyping","value","target","setNull","addEmoji","emoji","native","setTimeout","changeMessage","isPopups","val","isPopup","input","keyCode","sendMessage","_this2","isShowPopup","id","placeholder","onChange","onKeyUp","checkEnter","bind","onClick","aria-hidden","ref","checkOutSide","dist_es","onSelect","Login","responseFacebook","response","console","log","setUser","setItem","stringify","responseGoogle","facebook_login_with_button_default","textButton","appId","process","autoLoad","fields","callback","google_login","buttonText","clientId","onSuccess","isSignedIn","ModalSignOut","signOut","_this$props","isModal","removeItem","_this$props2","visible","Fragment","modal","title","onOk","onCancel","okText","cancelText","WRITE","READ","clientchat","getDataChat","get","writeDataChat","data","post","params","_config","config","assign","method","_request","axios","then","catch","err","msgChange","$","loadData","asyncToGenerator","regenerator_default","mark","_callee","objMessage","wrap","_context","prev","next","ClientChat","sent","document","addEventListener","clearInterval","badge","animate","scrollTop","prop","stop","sendnewMessage","_this$state","typeLogin","length","picture","imageUrl","_callee2","_context2","abrupt","socket","emit","getElementById","focus","stopPropagation","closest","setBadge","badgeChange","openNotification","clickNotify","notification","open","description","duration","onClose","users","getTyping","_this$state2","isTyping","clearTimeout","checkLogin","io","on","res","newMessage","m","_this3","_this$state3","ids","_map","parseInt","Math","max","apply","toConsumableArray","push","temp","setInterval","scrollHeight","clientHeight","_this4","_this$state4","Helmet","keys","status","login_Login","message_list_MessageItem","typing","input_App","isTypingNull","modal_sign_out_ModalSignOut","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","App_App","URL","origin","fetch","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8f832f51.chunk.js","sourcesContent":["import React from 'react';\r\nimport $ from 'jquery';\r\nimport { Helmet } from \"react-helmet\";\r\nimport Messages from './message-list';\r\nimport Input from './input';\r\nimport _map from 'lodash/map';\r\nimport io from 'socket.io-client';\r\nimport Login from './login';\r\nimport ModalSignOut from './modal-sign-out';\r\nimport { Button, notification } from 'antd';\r\nimport ClientChat from './service/clientchat'\r\n\r\nimport './App.css';\r\nvar status = $('#status');\r\nvar timeOut\r\nvar msgChange = null\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //Khởi tạo state,\r\n        this.state = {\r\n            messages: [],\r\n            user: {},\r\n            input: '',\r\n            badge: 0,\r\n            isShowPopup: false,\r\n            checkLogin: false,\r\n            visible: false,\r\n            typeLogin: localStorage.getItem('loginType') || null,\r\n            clickNotify: true,\r\n            isTyping: '',\r\n        }\r\n        this.socket = null;\r\n    }\r\n    //Connect với server nodejs, thông qua socket.io\r\n    UNSAFE_componentWillMount() {\r\n        this.setState({\r\n            user: JSON.parse(localStorage.getItem('user')) || []\r\n        })\r\n        this.socket = io(process.env.REACT_APP_SERVER);\r\n        this.socket.on('id', res => this.setState({ user: res })) // lắng nghe event có tên 'id'\r\n        this.socket.on('newMessage', (response) => { this.newMessage(response) });\r\n        this.socket.on('typing', (response) => { this.getTyping(response) });\r\n    }\r\n\r\n    loadData = async () => {\r\n        let objMessage = $('.messages');\r\n        let data = await ClientChat.getDataChat()\r\n        this.setState({\r\n            messages: data && JSON.parse(data) || []\r\n        })\r\n        document.addEventListener(\"visibilitychange\", ()=>{\r\n            clearInterval(msgChange)\r\n            document.title = (this.state && this.state.badge != 0 ? '(' + this.state.badge + ')' : '') + ' Client Chat '\r\n        });\r\n        objMessage.animate({ scrollTop: objMessage.prop('scrollHeight') }, 1000);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData()\r\n    }\r\n\r\n    newMessage(m) {\r\n        let objMessage = $('.messages');\r\n        const { typeLogin, user } = this.state\r\n        const messages = this.state.messages;\r\n        let ids = _map(messages, 'id');\r\n        let max = parseInt(Math.max(...ids)) || 0;\r\n        messages.push({\r\n            id: messages.length + 1,\r\n            user: m.user,\r\n            message: m.message,\r\n            url: m.url\r\n        });\r\n        if (typeLogin == 1 && m.user != user.profileObj.name || typeLogin == 0 && m.user != user.name) {\r\n            let temp = 1;\r\n            this.setState({\r\n                badge: this.state.badge + 1,\r\n                isTyping: \"\"\r\n            })\r\n            clearInterval(msgChange)\r\n            msgChange = setInterval(()=>{\r\n                if(temp == 1){\r\n                    document.title = '(' + this.state.badge  + ') Client Chat '\r\n                    --temp \r\n                }else{\r\n                    document.title = m.user + ' Nhắn Tin'\r\n                    ++temp\r\n                }\r\n            }, 1000)\r\n        }\r\n        if (objMessage && objMessage[0] && (objMessage[0].scrollHeight - objMessage[0].scrollTop) === objMessage[0].clientHeight) {\r\n            this.setState({ messages });\r\n            objMessage.animate({ scrollTop: objMessage.prop('scrollHeight') }, 300); //tạo hiệu ứng cuộn khi có tin nhắn mới\r\n\r\n        } else {\r\n            this.setState({ messages });\r\n            objMessage.animate({ scrollTop: objMessage.prop('scrollHeight') }, 300);\r\n        }\r\n    }\r\n    //Gửi event socket newMessage với dữ liệu là nội dung tin nhắn\r\n    sendnewMessage = () => {\r\n        const { typeLogin, messages } = this.state\r\n        let data = {}\r\n        if (typeLogin == 0) {\r\n            data = {\r\n                id: messages.length + 1,\r\n                user: this.state.user.name || null,\r\n                message: this.state.input || '',\r\n                url: this.state.user.picture.data.url || ''\r\n            }\r\n        } else if (typeLogin == 1) {\r\n            data = {\r\n                id: messages.length + 1,\r\n                user: (this.state.user.profileObj.name || null),\r\n                message: this.state.input || '',\r\n                url: this.state.user.profileObj.imageUrl || ''\r\n            }\r\n        }\r\n        if (this.state.input) {\r\n            (async () => await ClientChat.writeDataChat(data))()\r\n            this.socket.emit(\"newMessage\", data); //gửi event về server\r\n            this.setState({\r\n                input: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    changeMessage = (value) => {\r\n        document.getElementById(\"myInput\").focus()\r\n        this.setState({\r\n            input: value\r\n        })\r\n    }\r\n\r\n    isPopup = (val) => {\r\n        this.setState({\r\n            isShowPopup: val\r\n        })\r\n    }\r\n\r\n    checkOutSide = (e) => {\r\n        e.stopPropagation();\r\n        if (!e.target.closest('.emoji-mart') && this.state.isShowPopup == true) {\r\n            this.setState({\r\n                isShowPopup: false\r\n            })\r\n        }\r\n    }\r\n\r\n    setUser = (val, type) => {\r\n        this.setState({\r\n            user: val,\r\n            typeLogin: type\r\n        })\r\n    }\r\n\r\n    isModal = (val) => {\r\n        this.setState({\r\n            visible: val\r\n        });\r\n    };\r\n\r\n    setBadge = () => {\r\n        this.setState({\r\n            badge: 0\r\n        })\r\n        document.title = 'Client Chat'\r\n        clearInterval(msgChange);\r\n    }\r\n\r\n    badgeChange = () => {\r\n        this.setBadge()\r\n    }\r\n\r\n    openNotification = () => {\r\n        const { clickNotify } = this.state\r\n        if (clickNotify) {\r\n            this.setState({\r\n                clickNotify: false\r\n            })\r\n            this.badgeChange()\r\n            notification.open({\r\n                message: \"Tin Nhắn Mới\",\r\n                description: (\r\n                    <div className=\"notification-wait\">\r\n                        {\"Bạn Có \" + this.state.badge + \" tin nhắn chờ\"}\r\n                    </div>),\r\n                className: \"notification\",\r\n                duration: 2,\r\n                onClose: () => {\r\n                    this.setState({\r\n                        clickNotify: true\r\n                    })\r\n                }\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    sendTyping = (users) => {\r\n        const { typeLogin } = this.state\r\n        let data = {}\r\n        if (typeLogin == 0) {\r\n            data = {\r\n                user: users.name || null,\r\n            }\r\n        } else if (typeLogin == 1) {\r\n            data = {\r\n                user: (users.profileObj.name || null),\r\n            }\r\n        }\r\n        this.socket.emit(\"typing\", data); //gửi event về server\r\n    }\r\n\r\n    getTyping = (data) => {\r\n        const { typeLogin, user } = this.state\r\n        if (typeLogin == 1 && data.user != user.profileObj.name || typeLogin == 0 && data.user != user.name) {\r\n            this.setState({\r\n                isTyping: data.user\r\n            })\r\n            clearTimeout(timeOut)\r\n            timeOut = setTimeout(() => {\r\n                this.setState({\r\n                    isTyping: \"\"\r\n                })\r\n            }, 3000)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { checkLogin, user, visible, typeLogin, badge, isTyping, input } = this.state\r\n        return (\r\n            <div className='containButton'>\r\n                <Helmet>\r\n                    <title>{`Client Chat` + (badge == 0 ? '' : '')} </title>\r\n                </Helmet>\r\n                {\r\n                    user && Object.keys(user).length <= 1 || user == null || user && user.status == \"unknown\" ?\r\n                        <Login\r\n                            checkLogin={checkLogin}\r\n                            setUser={this.setUser}\r\n                        />\r\n                        :\r\n                        <div className=\"app__content\" onClick={this.checkOutSide}>\r\n                            <div className=\"badge-block\" onClick={this.openNotification}>\r\n                                <div className=\"far fa-bell icon-badge\"></div>\r\n                                <span className={badge == 0 ? 'd-none' : \"e-badge e-badge-info e-badge-overlap e-badge-notification\"}>{badge}</span>\r\n                            </div>\r\n                            <div className=\"chat_window\" onClick={this.setBadge} id=\"chat_window\">\r\n                                <i onClick={() => this.isModal(true)} className=\"sign-out fas fa-sign-out-alt\" aria-hidden=\"true\"></i>\r\n                                <Messages type={typeLogin} messages={this.state.messages} typing={this.state.typing} />\r\n                                <div className={isTyping ? \"wave typing\" : `d-none`}>\r\n                                    <p>{isTyping} đang cào phím</p>\r\n                                    <span>&nbsp;</span>\r\n                                    <span>.</span>\r\n                                    <span>.</span>\r\n                                    <span>.</span>\r\n                                </div>\r\n                                <Input\r\n                                    input={input}\r\n                                    sendMessage={this.sendnewMessage}\r\n                                    sendTyping={this.sendTyping}\r\n                                    changeMessage={this.changeMessage}\r\n                                    isShowPopup={this.state.isShowPopup}\r\n                                    isPopup={this.isPopup}\r\n                                    checkOutSide={this.checkOutSide}\r\n                                    user={user}\r\n                                    isTypingNull={this.isTypingNull}\r\n                                />\r\n                            </div>\r\n                            <ModalSignOut\r\n                                isModal={this.isModal}\r\n                                visible={visible}\r\n                                setUser={this.setUser}\r\n                            />\r\n                        </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class messageItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //Khởi tạo state,\r\n        this.state = {\r\n            checkIsMine: ''\r\n        }\r\n    }\r\n\r\n    isMine = () =>{\r\n        const user = JSON.parse(localStorage.getItem(\"user\"));\r\n        if(user == null){\r\n            window.location.reload(true);\r\n        }\r\n        if(this.props.type == 0){\r\n            if(user && this.props.user == user.name){\r\n                this.setState({\r\n                    checkIsMine: 'is-mine'\r\n                })\r\n            }\r\n        }else if(this.props.type == 1){\r\n            if( user && user.profileObj && (this.props.user == user.profileObj.name)){\r\n                this.setState({\r\n                    checkIsMine: 'is-mine'\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.isMine()\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <li>\r\n                <div className={`${this.state.checkIsMine} nameTag`}>{this.props.user}</div>\r\n                <div className={\"message left appeared\"}>\r\n                    <div className={`avatar ${this.state.checkIsMine}`}><img src={this.props.url} /></div>\r\n                    <div className={`text_wrapper ${this.state.checkIsMine}`}>\r\n                        <div className=\"text\">{this.props.message}</div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Message from './message-item';\r\n\r\n\r\nexport default class MessageItem extends React.Component {\r\n    render () {\r\n        return (\r\n            <ul className=\"messages\">\r\n                {this.props.messages.map((item, index) =>\r\n                    <Message type={this.props.type} key={index} url={item.url} user={item.user} message={item.message}/>\r\n                )}\r\n            </ul>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { Picker } from 'emoji-mart'\r\n\r\nexport default class App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //Khởi tạo state,\r\n        this.state = {\r\n            value: this.props.input,\r\n        }\r\n    }\r\n    checkEnter(e) {\r\n        this.props.changeMessage(this.state.value)\r\n        this.props.sendTyping(this.props.user)\r\n        if (e.keyCode === 13) {\r\n            this.props.sendMessage();\r\n            this.setNull()\r\n        }\r\n    }\r\n    setValue = (e) =>{\r\n        this.props.sendTyping(this.props.user)\r\n        this.setState({\r\n            value: e.target.value\r\n        })\r\n    }\r\n\r\n    setNull = () =>{\r\n        this.setState({\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    addEmoji = (emoji) => {\r\n        this.props.sendTyping(this.props.user)\r\n        this.setState({\r\n            value: this.state.value + emoji.native,\r\n        })\r\n        setTimeout(\r\n            this.props.changeMessage(this.state.value + emoji.native)   \r\n        , 3000)\r\n    }\r\n\r\n    isPopups = (val) =>{\r\n        this.props.isPopup(val)\r\n    }\r\n\r\n    render () {\r\n        const { isShowPopup } = this.props \r\n        return (\r\n           <div>\r\n                <div className=\"bottom_wrapper\">\r\n                    <div  className=\"message_input_wrapper\">\r\n                        <div className=\"input-group mb-3\">\r\n                            <input id=\"myInput\" value={this.state.value} type=\"text\" className=\"message_input\" placeholder=\"Nhập Tin Nhắn ...\" onChange={this.setValue} onKeyUp={this.checkEnter.bind(this)} />\r\n                            <div className=\"input-group-prepend\">\r\n                                <i onClick={() => this.props.isPopup(true)} className=\"icon far fa-smile\" aria-hidden=\"true\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"send_message\" onClick={() => (this.props.sendMessage(), this.setNull())} ref=\"inputMessage\" >\r\n                        <div className='icon'></div>\r\n                        <div className='text'>Gửi</div>\r\n                    </div>\r\n                </div>\r\n                <div className={isShowPopup ? 'ABC' : 'd-none'} onClick={this.checkOutSide}>\r\n                    <Picker onSelect={this.addEmoji} />\r\n                </div>\r\n           </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport { GoogleLogin } from 'react-google-login';\r\n\r\nexport default class Login extends React.Component {\r\n\r\n    responseFacebook = (response) => {\r\n        console.log('fb', response)\r\n        this.props.setUser(response, 0)\r\n        localStorage.setItem('user', JSON.stringify(response))\r\n        localStorage.setItem('loginType', 0)\r\n    }\r\n\r\n    responseGoogle = (response) =>{\r\n        console.log('google', response)\r\n        this.props.setUser(response, 1)\r\n        localStorage.setItem('user', JSON.stringify(response))\r\n        localStorage.setItem('loginType', 1)\r\n    }\r\n\r\n    render () {\r\n        return (\r\n           <div className='containFB'>\r\n                <FacebookLogin\r\n                    // cssClass=\"facebook\"\r\n                    textButton=\"FaceBook\"\r\n                    // appId=\"3469006863157349\"\r\n                    appId={process.env.REACT_APP_FACEBOOK_KEY}\r\n                    autoLoad={false}\r\n                    fields=\"name,email,picture\"\r\n                    callback={this.responseFacebook}\r\n                />\r\n                <GoogleLogin\r\n                    className=\"google\"\r\n                    buttonText=\"Google\"\r\n                    clientId={process.env.REACT_APP_GOOGLE_KEY}\r\n                    onSuccess={this.responseGoogle}\r\n                    isSignedIn={false}\r\n                />\r\n           </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport { Modal } from 'antd';\r\n\r\nexport default class ModalSignOut extends React.Component {\r\n  \r\n    signOut = () =>{\r\n        const {setUser, isModal} = this.props;\r\n        localStorage.removeItem('user')\r\n        localStorage.removeItem('loginType')\r\n        isModal(false)\r\n        setUser(null, null)\r\n        // window.location = \"https://clientchat.herokuapp.com/\"\r\n    }\r\n\r\n    render() {\r\n        const {visible, isModal} = this.props\r\n        return (\r\n        <>\r\n            <Modal\r\n                title=\"Thông Báo !!!\"\r\n                visible={visible}\r\n                onOk={this.signOut}\r\n                onCancel={() => isModal(false)}\r\n                okText=\"Xác Nhận\"\r\n                cancelText=\"Thoát\"\r\n            >\r\n            <p> Bạn Có Muốn Thoát ?</p>\r\n            </Modal>\r\n        </>\r\n        );\r\n    }\r\n}","import API from '../api/api';\r\n\r\nconst WRITE = '/write';\r\nconst READ = '/read';\r\n\r\nclass ClientChat extends API{\r\n\r\n    getDataChat = () => {\r\n        return this.get(process.env.REACT_APP_SERVER + READ);\r\n    }\r\n\r\n    writeDataChat = (data) => {\r\n        return this.post(process.env.REACT_APP_SERVER + WRITE, data);\r\n    }\r\n}\r\n\r\nexport default new ClientChat();","import axios from 'axios';\r\n\r\nclass API {\r\n\r\n    _request(_config) {\r\n        let config = Object.assign(\r\n            _config = _config || {}\r\n        );\r\n        return axios(config)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n            .catch(err => {\r\n                let { response } = err;\r\n                if (!response) {\r\n                    throw err;\r\n                }\r\n            });\r\n    }\r\n\r\n    get = (url, params, _config) => {\r\n        let config = Object.assign({\r\n            url,\r\n            method: 'get',\r\n            params\r\n        }, _config || {});\r\n        return this._request(config);\r\n    }\r\n\r\n    post(url, data, _config) {\r\n        let config = Object.assign({\r\n            url,\r\n            method: 'post',\r\n            data\r\n        }, _config || {});\r\n        return this._request(config);\r\n    }\r\n\r\n    put(url, data, _config) {\r\n        let config = Object.assign({\r\n            url,\r\n            method: 'put',\r\n            data\r\n        }, _config || {});\r\n        return this._request(config);\r\n    }\r\n\r\n    patch(url, data, _config) {\r\n        let config = Object.assign({\r\n            url,\r\n            method: 'patch',\r\n            data\r\n        }, _config || {});\r\n        return this._request(config);\r\n    }\r\n\r\n    delete(url, params, _config) {\r\n        let config = Object.assign({\r\n            url,\r\n            method: 'delete',\r\n            params\r\n        }, _config || {});\r\n        return this._request(config);\r\n    }\r\n}\r\n\r\nexport default API","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}